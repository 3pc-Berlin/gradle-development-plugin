/**
 *  Gradle Script to set up a default Testing environment for Java Applications
 *  - Junit 5
 *  - Jacoco
 *
 *  More Information"s about Gradle Test Settings: Information"s about https://docs.gradle.org/current/userguide/java_testing.html
 */

apply plugin: "jacoco"

test {
    description = "Running unit tests."
    systemProperty("spring.profiles.active", "test")

    filter {
        excludeTestsMatching("*IntegrationTest")
        excludeTestsMatching("*E2ETest")
    }
}

tasks.register("integrationtest", Test) {
    description = "Running integration tests."
    systemProperty("spring.profiles.active", "integrationTest")

    filter {
        includeTestsMatching("*IntegrationTest")
        excludeTestsMatching("*E2ETest")
    }
}

tasks.register("e2eTest", Test) {
    description = "Running End-to-End (E2E) tests using testcontainers (docker)."
    systemProperty("spring.profiles.active", "e2eTest")

    filter {
        includeTestsMatching("*E2ETest")
        excludeTestsMatching("*IntegrationTest")
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
    executionData fileTree(buildDir).include("/jacoco/*.exec")
    afterEvaluate {
        // exclude non project code from coverage
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/google/**", "**/proto/**",
                    "**/models/**", "**/model/**",
                    "**/config/*",
                    "**/exceptions/*", "**/exception/*",
            ])
        }))
    }
}

tasks.withType(Test).configureEach {
    group = "verification"

    useJUnitPlatform()

    minHeapSize = "512m"
    maxHeapSize = "2048m"

    systemProperty("junit.extensions.autodetection.enabled", "true")
    systemProperty("junit.jupiter.execution.parallel.enabled", "true")

    testLogging {
        events = ["passed", "failed", "skipped"]
        showStandardStreams = true
    }
}
